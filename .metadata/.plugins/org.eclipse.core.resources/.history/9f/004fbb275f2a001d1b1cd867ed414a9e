<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!-- views/chat.jsp -->
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
<jsp:include page="/WEB-INF/views/common/header.jsp" />

<style>
	.chatBox{
		height:200px;
		overflow-y:scroll;
		border:1px solid #ccc;
		border-radius:5px;
	}
</style>

<!-- sock.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js"></script>

<div class="container">
	<h1>Chat Page -</h1>
	<div class="container chatBox" id="data">
		
	</div>
	<br/>
	<div class="row">
		<div class="col-md-10">
			<input type="text" class="form-control" id="message" />
		</div>
		<div class="col-md-2">
			<input type="button" id="sendBtn" class="form-control btn btn-primary" value="SEND" />
		</div>
	</div>
</div>

<script>
	var sock = new SockJS("chtHandler"); // url을 넣어 줘야됨(root에서 path로 지정한 이름)
	// 서버와 연결이 성사 되었을 때
	sock.onopen = function(){
		console.log("연결 완료");
		sock.send("연결 됨");	// send는 서버가 클라이언트에게 메세지 전달해주는 친구
	}
	
	// 서버와 연결이 끊겼을 때 
	sock.onclose = function(){
		console.log("연결 끊김");
	}
	
	// server에서 메세지가 전달되었을 때 호출
	sock.onmessage = function(message){
		console.log(message);
		var msg = message.data;
		$("#data").append(msg);
	}
	
	// send버튼 눌렀을 때
	$("#sendBtn").click(function(){
		// 메세지 전달
		sendMessage();
	});
	
	// 메세지 작성칸에서 enter가 눌러졌을 때
	$("#message").keydown(function(e){
		console.log(e.keyCode);
		// 13 == enter
		if(e.keyCode == 13){
			// 메세지 전달
			sendMessage();
		}
	});
	
	function sendMessage(){
		var message = $("#message").val();
		sock.send(message);
		$("#message").val(); // 메시지 전달 하고나면 해당 값 초기화
	}
</script>

</body>
</html>